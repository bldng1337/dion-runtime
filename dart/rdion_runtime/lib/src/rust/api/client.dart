// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

import 'dart:convert';

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import '../third_party/dion_runtime/datastructs.dart';
import '../third_party/dion_runtime/permission.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ExtensionClient>>
abstract class ExtensionClient implements RustOpaqueInterface {
  static Future<ExtensionClient> init(
          {required FutureOr<String> Function(String) loadData,
          required FutureOr<void> Function(String, String) storeData,
          required FutureOr<void> Function(Action) doAction,
          required FutureOr<bool> Function(Permission, String?)
              requestPermission,
          required FutureOr<String> Function() getPath}) =>
      RustLib.instance.api.crateApiClientExtensionClientInit(
          loadData: loadData,
          storeData: storeData,
          doAction: doAction,
          requestPermission: requestPermission,
          getPath: getPath);
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ManagerClient>>
abstract class ManagerClient implements RustOpaqueInterface {
  static Future<ManagerClient> init(
          {required FutureOr<String> Function() getPath,
          required FutureOr<ExtensionClient> Function(ExtensionData)
              getClient}) =>
      RustLib.instance.api.crateApiClientManagerClientInit(
          getPath: getPath, getClient: getClient);
}
